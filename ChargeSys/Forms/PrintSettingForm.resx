<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="pointFiller.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>8, 26</value>
  </metadata>
  <metadata name="pointValidator.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>137, 25</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnSave.Icon" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AABJRU5ErkJggg==
</value>
  </data>
</root>